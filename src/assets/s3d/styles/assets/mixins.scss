@mixin font-face($font-family, $url, $weight: normal, $style: normal, $asset-pipeline: false) {
  @font-face {
    font-family: "#{$font-family}";
    font-style: "#{$style}";
    font-weight: #{$weight};

    src: url("#{$url}.eot");
    src: url("#{$url}.eot?#iefix") format("embedded-opentype"),
      url("#{$url}.woff") format("woff"),
      url("#{$url}.ttf") format("truetype");
  }
}

// Function for converting a px based font-size to rem.
@function rem($size) {
  $remSize: $size / 14px;
  @return #{$remSize}rem;
}

@function max($numbers...) {
  @return m#{a}x(#{$numbers})
};

@function min($numbers...) {
  @return m#{i}n(#{$numbers})
};

@function vmax($pixels, $context: $full-width) {
  @return #{($pixels/$context)* 100}vmax
};

@function vw($pixels, $context: $full-width) {
  @return  #{($pixels/$context)* 100}vw
}

@function vh($pixels, $context: $full-width) {
  @return  #{($pixels/$context)* 100}vh
}

@function lh($lh, $fz) {
  @return #{($lh/$fz)}em
}

@mixin flexCenter() {
  align-items: center;
  display: flex;
  justify-content: center;
}

@mixin s3d-text-m ($color: $colorTextM , $lh: 1em,$width: 400) {
  font-family: $default-font;
  font-weight: $width;
  color: $color;
  line-height: $lh;
  font-size: var(--s3d-font-size-m);
}

@mixin s3d-text-s ($color: $colorTextS , $lh: 1em, $width: 400) {
  font-family: $default-font;
  font-weight: $width;
  color: $color;
  line-height: $lh;
  font-size: var(--s3d-font-size-s);
}
@mixin s3d-text-table ($color: $colorTextS , $lh: 1.6em, $width: 400) {
  font-family: $default-font;
  font-weight: $width;
  color: $color;
  line-height: $lh;
  font-size: var(--s3d-font-size-table);
}

$xs: 767px;
$sm: 1366px;
$md: 1920px;

@mixin media($size) {
  @media (max-width: $size) {
    @content;
  }
}

@mixin mobile {
  @include media($xs) {
    @content;
  }
}

@mixin tablet {
  @include media($sm) {
    @content;
  }
}

@mixin tabletLarge {
  @include media($md) {
    @content;
  }
}


